"""Add fs_uniquifier

Revision ID: 743f453ff85b
Revises: bcd8bff69995
Create Date: 2024-03-11 23:47:09.778701

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '743f453ff85b'
down_revision = 'bcd8bff69995'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # with op.batch_alter_table('event_logs', schema=None) as batch_op:
    #     batch_op.create_index(batch_op.f('ix_event_logs_user_id'), ['user_id'], unique=False)

    # with op.batch_alter_table('exons', schema=None) as batch_op:
    #     batch_op.drop_index('ix_exons_chr')

    # with op.batch_alter_table('sample_projects', schema=None) as batch_op:
    #     batch_op.alter_column('name',
    #            existing_type=mysql.VARCHAR(length=255),
    #            type_=sa.String(length=50),
    #            existing_nullable=False)
    #     batch_op.alter_column('type',
    #            existing_type=mysql.VARCHAR(length=255),
    #            nullable=True)

    # with op.batch_alter_table('sequencing_runs', schema=None) as batch_op:
    #     batch_op.alter_column('name',
    #            existing_type=mysql.VARCHAR(length=255),
    #            type_=sa.String(length=50),
    #            existing_nullable=True)

    # with op.batch_alter_table('transcript_measurements', schema=None) as batch_op:
    #     batch_op.create_unique_constraint(None, ['transcript_id', 'sample_id'])
    #     batch_op.create_foreign_key(None, 'transcripts', ['transcript_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('fs_uniquifier', sa.String(length=255), nullable=False))
        # batch_op.create_unique_constraint(None, ['fs_uniquifier'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('fs_uniquifier')

    # with op.batch_alter_table('transcript_measurements', schema=None) as batch_op:
    #     batch_op.drop_constraint(None, type_='foreignkey')
    #     batch_op.drop_constraint(None, type_='unique')

    # with op.batch_alter_table('sequencing_runs', schema=None) as batch_op:
    #     batch_op.alter_column('name',
    #            existing_type=sa.String(length=50),
    #            type_=mysql.VARCHAR(length=255),
    #            existing_nullable=True)

    # with op.batch_alter_table('sample_projects', schema=None) as batch_op:
    #     batch_op.alter_column('type',
    #            existing_type=mysql.VARCHAR(length=255),
    #            nullable=False)
    #     batch_op.alter_column('name',
    #            existing_type=sa.String(length=50),
    #            type_=mysql.VARCHAR(length=255),
    #            existing_nullable=False)

    # with op.batch_alter_table('exons', schema=None) as batch_op:
    #     batch_op.create_index('ix_exons_chr', ['chr'], unique=False)

    # with op.batch_alter_table('event_logs', schema=None) as batch_op:
    #     batch_op.drop_index(batch_op.f('ix_event_logs_user_id'))

    # ### end Alembic commands ###
